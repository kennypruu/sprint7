"""Separa numeros"""

def separa_numeros(lista):
   
    lista_de_convertibles = []

    lista_de_no_convertibles = []

    def procesa_elemento(elemento):

        if isinstance(elemento, (tuple, list)): 
            for sub_item in elemento: procesa_elemento(sub_item)

        else:
            try: lista_de_convertibles.append(float(elemento))

            except (ValueError, TypeError): lista_de_no_convertibles.append(elemento)
   
    for item in lista: procesa_elemento(item)
    
    return lista_de_convertibles, lista_de_no_convertibles


def main_separa_numeros():

    print("Programa para separar los n√∫meros de los otros valores desde una lista dada\n")
    
    lista_prueba = ['1.3', 'one', '1e10', 'seven', '3-1/2', ('2', 1, 1.4, 'not-a-number'), [1, 2, '3', '3.4']]
    
    lista_convertibles, lista_no_convertibles = separa_numeros(lista_prueba)

    print(f"Elementos convertibles: \n{lista_convertibles}\n")

    print(f"Elementos no convertibles: \n{lista_no_convertibles}\n")

main_separa_numeros()




"""Separa numeros v2"""

def separa_numeros(lista):
   
    lista_de_convertibles = []

    lista_de_no_convertibles = []

    def procesa_elemento(elemento):

        if isinstance(elemento, (tuple, list)): 

            for sub_item in elemento: procesa_elemento(sub_item)

        else:
            
            try: lista_de_convertibles.append(float(elemento))

            except (ValueError, TypeError): lista_de_no_convertibles.append(elemento)
   
    for item in lista: procesa_elemento(item)
    
    return lista_de_convertibles, lista_de_no_convertibles


def main_separa_numerosv2(lista):

    print("Programa para separar los numero de los otros valores desde un diccionario dado\n")
    
    lista_convertibles, lista_no_convertibles = separa_numeros(lista)

    print(f"Elementos convertibles: \n{lista_convertibles}\nElementos no convertibles: \n{lista_no_convertibles}\n")

lista_prueba = ['1.3', 'one', '1e10', 'seven', '3-1/2', ('2', 1, 1.4, 'not-a-number'), [1, 2, '3', '3.4']]
main_separa_numerosv2(lista_prueba)

